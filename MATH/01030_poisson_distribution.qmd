---
output: 
  html:
    toc: true
    html-math-method: katex
    css: styles.css
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 72
---


::: callout-note
This is a **play** file.
Note that there are five types of callouts, including: `note`,
`warning`, `important`, `tip`, and `caution`.
:::

------------------------------------------------------------------------

###   Katex References (html)
https://katex.org/docs/supported.html

HTML with quarto (CSS, )https://quarto.org/docs/output-formats/html-basics.html
Equations, Tex macros,
https://quarto.org/docs/authoring/markdown-basics.html#equations
https://quarto.org/docs/guide/
https://quarto.org/docs/publishing/github-pages.html
## Poisson Distribution

- SEE Taylor, binomial to Poisson 
- BMLS 
- PSU 414 
- wikipedia 
- http://www.econometricsbysimulation.com/search?q=poisson

Let $\chi$ be rv, counting of events , 0, 1, 2 ... per interval. $\chi$ might
be 

-   counts per unit time, distance. 
- typos per page. 
- cars passing  per unit time. 
- ATM customers per hour.

## Motivating Poisson:

Suppose, on averge, receive 9 letters in mail each day. And suppose, can model
post office as poisson. Then expect sd to be sqrt(9) and so expect actual
number of letters to vary between 3 and 12 (2 sd).



```{=tex}
\begin{align*}
Pr(X = x) = {e^{-\lambda}\lambda^x}/{x!}
\end{align*}
```
```{r dpois}
lambda = 1    # rate of 1 per unit
x  <- 0:10    # how many counts?
z  <- dpois(x = x, lambda = lambda)
plot(z, main ="Poisson Distribution: upto n=10 counts, lambda=1",
     ylab = "dpois",
     xlab = "counts, 1:n"
)

```

------------------------------------------------------------------------

## Begin with Binomial.

-   u = expected number of events (letters)
-   in N = number of draws

```{.r}
set.seed(2021)
draws_approx  <- function(u, N) sum (rbinom(N, 1, u/N))

draws_approx(9, N=9)  # this says,  p = 1 for each draw

draws_approx(9, N=18) # here p = 1/2, like flipping a coin, so total heads will vary.
```

## Redo above, using my notation:

-   p = prob of success (u/N)
-   u = expected number of successes (letters)
-   in N = number of draws
-   B = repeat with this many samples

```{r}

B   <- 1000
u   <- 9
N  <-  18


# expect to see an avergae of 9 (successes from 18 draws at p = 1/2)
# expect sd to be 3 (if poisson holds)
# double[B], each is success for N in 1 sample
x  <- rbinom(B, N, u/N)
mean(x)
sd(x)


# suppose N really much larger, ie prob = u/N  much smaller
# getting closer!
N  <- 100
x  <- rbinom(B, N, u/N)
mean(x)
sd(x)


# now N huge, p = u/n tiny
N  <- 10^6
x  <- rbinom(B, N, u/N)
mean(x)
sd(x)

hist(x)
boxplot(x)
plot(density(x))

```

## Using sample to estimate expect value and variance, compare to Poisson.

```{r knit_exit(), include = FALSE  , eval=FALSE }
# knitr::knit_exit()
```

/newpage

```{r plot_density, eval=FALSE  }
density_object <- density(mpg$hwy)
pdf("~/Downloads/print_and_delete/out.pdf")
plot(density_object)
dev.off()
```

```{r plot_png_example, eval=FALSE  }
filename  <- "~/Downloads/print_and_delete/out.png"
png(filename = filename,
         width = 480, height = 480, units = "px", pointsize = 12)
plot(density_object)
dev.off()
```
