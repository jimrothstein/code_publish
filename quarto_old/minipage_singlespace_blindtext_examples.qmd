---
title: "using easystats notes"
date:  \today 
pdf-engine: lualatex
format:
  pdf: 
    include-in-header: 
        -   geometry.tex
---

<!--
OPTION
  pdf: 
    colorlinks: true
    include-in-header: 
      text: |
        \usepackage[top=.5in, bottom=.5in, left=.5in, right=.5in]{geometry}
        \usepackage{amsmath,amssymb,amstext,amsfonts}
        \usepackage{lipsum}
        \usepackage{setspace}
        \usepackage{blindtext}

        -->
\section{To run:}

- quarto preview <file> --to pdf    # (opens in a viewer)
- quarto render %	; zathura         # not quite right cli

- math mode latex,  seems to work if *outside* R chunk
$$
x^2
$$

## Air Quality
<!--
% \begin{document}
% \doublespacing 

blindtext is just lipsum ?

-->

\blindtext[1]

\section{minipage 1}

\begin{minipage}{.4\textwidth}

\begin{singlespace}
Here is a bulleted list\par (\texttt{singlespace} environment).
\begin{itemize}
\item One
\item Two
\item Three
\end{itemize}
\end{singlespace}%
The list has ended.
\end{minipage}\kern10pt%

\section{Symbol and minipage 2}

    See R Lang Ref: 2.1.3.1   Symbol (aka name), usually name of R object.  Use
    `as.name() to coerce to symbol or quote() or atoms of parse()

\begin{minipage}{.9\textwidth}
\begin{singlespace}

    In order to manipulate symbols we need a new element in our language: the
    ability to quote a data object. Suppose we want to construct the list (a
    b). We can’t accomplish this with (list a b), because this expression
    constructs a list of the values of a and b rather than the symbols
    themselves. This issue is well known in the context of natural languages,
    where words and sentences may be regarded either as semantic entities or as
    character strings (syntactic entities). The common practice in natural
    languages is to use quotation marks to indicate that a word or a sentence
    is to be treated literally as a string of characters. For instance, the
    first letter of “John” is clearly “J.” If we tell somebody “say your name
    aloud,” we expect to hear that person’s name. However, if we tell somebody
    “say ‘your name’ aloud,” we expect to hear the words “your name.” Note that
    we are forced to nest quotation marks to describe what somebody else might
    say. We can follow this same practice to identify lists and symbols that
    are to be treated as data objects rather than as expressions to be
    evaluated. However, our format for quoting differs from that of natural
    languages in that we place a quotation mark (traditionally, the single
    quote symbol ’) only at the beginning of the object to be quoted. We can
    get away with this in Scheme syntax because we rely on blanks and
    parentheses to delimit objects. Thus, the meaning of the single quote
    character is to quote the next object. Now we can distinguish between
    symbols and their values:

    https://stackoverflow.com/questions/8846628/what-exactly-is-a-symbol-in-lisp-scheme

\end{singlespace}
The list has ended.
\end{minipage}

